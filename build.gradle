buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:+'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:+'
        classpath 'com.jakewharton.hugo:hugo-plugin:+'
    }
}
apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'hugo'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:20.+'
    compile 'com.android.support:appcompat-v7:20.+'
    compile 'com.android.support:support-v13:20.+'

    compile 'com.squareup.dagger:dagger:1.+'
    compile 'com.jakewharton:butterknife:5.+'
    compile 'com.jakewharton.timber:timber:2.+'

    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.apache.commons:commons-io:1.3.2'
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ", TimeZone.getTimeZone("UTC"))
def gitVersionCode = 1; //'git rev-list --count HEAD'.execute([], project.rootDir).text.trim().toInteger();

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion 19
    buildToolsVersion "20"

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries preDexEnabled && !isTravis
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode gitVersionCode
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            keyAlias "mobilemtk"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-rev' + gitVersionCode + '-dev'
        }
        release {
            versionNameSuffix '-rev' + gitVersionCode
            signingConfig signingConfigs.release
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'proguard-rules.pro'
        }
    }

    packagingOptions {
        // removed because of conflict in creating package
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = android.signingConfigs.debug
}